pragma solidity ^0.5.10;

contract BookOwnerSystem {

        uint16[2500] codes;
        address[2500] owneraddresses;
        address owner;

    constructor() BookOwnerSystem() public{

owner = msg.sender;

//secret codes (omitted)
//codes[0] = 00000;

    }

    modifier onlyOwner{
        require(msg.sender == owner);
        _;
    }

    function setcodes( uint bookid , uint16 secret_code ) public onlyOwner {
        codes[bookid] = secret_code;
    }

    function owner_register ( uint bookid , uint16 secret_code ) public {
        if (secret_code == codes[bookid] ) {
            owneraddresses[bookid] = msg.sender;
        }
    }

    function get_owner( uint bookid) public view returns (address) {
        return owneraddresses[bookid];
    }

    function get_owner_lists() public view returns ( address[2500] memory ){
        return owneraddresses;
    }


}
